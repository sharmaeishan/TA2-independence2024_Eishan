from analysis.csv_analysis import CSVAnalysis


if __name__ == "__main__":
    # Read CSV file
    df = CSVAnalysis.read_csv('data.csv')

    # Perform EDA
    print(CSVAnalysis.dataframe_head(df))
    print(CSVAnalysis.dataframe_shape(df))

    # Define save paths
    save_dir = 'visualizations/'  # Ensure this directory exists
    column_name = 'your_column_name'  # Replace with actual column name
    x_column = 'your_x_column'  # Replace with actual x column name
    y_column = 'your_y_column'  # Replace with actual y column name

    # Generate and save visualizations
    CSVAnalysis.histplot(df, column_name, f'{save_dir}histplot_{column_name}.png')
    CSVAnalysis.boxplot(df, column_name, f'{save_dir}boxplot_{column_name}.png')
    CSVAnalysis.scatterplot(df, x_column, y_column, f'{save_dir}scatterplot_{x_column}_{y_column}.png')
    CSVAnalysis.heatmap(df, f'{save_dir}heatmap.png')
    CSVAnalysis.pairplot(df, f'{save_dir}pairplot.png')
    CSVAnalysis.lineplot(df, x_column, y_column, f'{save_dir}lineplot_{x_column}_{y_column}.png')
    CSVAnalysis.barplot(df, x_column, y_column, f'{save_dir}barplot_{x_column}_{y_column}.png')
    CSVAnalysis.violinplot(df, x_column, y_column, f'{save_dir}violinplot_{x_column}_{y_column}.png')
    CSVAnalysis.density_plot(df, column_name, f'{save_dir}density_plot_{column_name}.png')
    CSVAnalysis.regplot(df, x_column, y_column, f'{save_dir}regplot_{x_column}_{y_column}.png')
